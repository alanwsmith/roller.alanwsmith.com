<!DOCTYPE html>
<html>

<head>
  <title>Rodger Roller</title>
  <style>
    body {
      background-color: black;
      color: #aaa;
    }
  </style>
  <link rel="stylesheet" href="/styles/global.css" />
  <script>
    const s = {
      base_stats: ["Accuracy", "Damage", "Mastery", "Speed"],
    }

    const updateState = () => {
      for (k in s) {
        if (window[k] !== undefined) {
          window[k].innerHTML = s[k]
        }
      }
    }

    const roll = (sides) => {
      const roll_holder = new Uint32Array(1)
      crypto.getRandomValues(roll_holder)
      const raw_roll = roll_holder[0] / (0xffffffff + 1)
      return Math.floor(raw_roll * sides) + 1
    }

    const get_stat_total = (class_name) => {
      return Array.from(
        document.getElementsByClassName(class_name)
      ).map((element) => {
        return parseInt(element.innerHTML, 10)
      }).reduce((accumulator, currentValue) => accumulator + currentValue, 0)
    }

    const get_toggle_total = (class_name) => {
      return Array.from(
        document.getElementsByClassName(class_name)
      ).map((element) => {
        if (element.checked) {
          return parseInt(element.dataset.value, 10)
        }
        else {
          return 0
        }
      }).reduce((accumulator, currentValue) => accumulator + currentValue, 0)
    }

    const get_min_total = (class_name, compare_value) => {
      return Array.from(
        document.getElementsByClassName(class_name)
      ).map((element) => {
        if (compare_value >= parseInt(element.dataset.min, 10)) {
          return parseInt(element.dataset.value, 10)
        }
        else {
          return 0
        }
      }).reduce((accumulator, currentValue) => accumulator + currentValue, 0)
    }

    const updateValues = () => {
      s.base_stats.forEach((stat) => {
        s[`${stat}_Base`] = get_stat_total(stat)
        s[`${stat}_Mod`] = Math.floor(get_stat_total(stat) / 2)
      })
    }

    const roll_accuracy = (event) => {
      s.Gun_Number = parseInt(event.target.dataset.gun, 10)
      s.Gun_Accuracy_Mod = get_stat_total(`Gun_Accuracy_Mod__gun${s.Gun_Number}`)
      s.Toggled_Accuracy = get_toggle_total(`Gun_Accuracy_Mod__gun${s.Gun_Number}_toggle`)
      s.Accuracy_Adjustment = s.Gun_Accuracy_Mod + s.Toggled_Accuracy
      s.Is_Favored_Gun_Type = document.getElementById(`Is_Favored_Gun_Type__gun${s.Gun_Number}`).innerHTML
      if (s.Is_Favored_Gun_Type === "yes") {
        s.Accuracy_Adjustment += s.Accuracy_Mod
      }
      s.Roll_Natural = roll(20)
      s.Roll_Total = s.Roll_Natural + s.Accuracy_Adjustment
      if (s.Roll_Natural == 1) {
        s.Hits = 0
        s.Crits = 0
      } else {
        s.Hits = get_min_total(`hits_count_gun${s.Gun_Number}`, s.Roll_Total)
        s.Crits = get_min_total(`crits_count_gun${s.Gun_Number}`, s.Roll_Total)
      }
      if (s.Roll_Natural == 20) {
        s.Crits += 1
      }
      calculate_hits()
    }

    const calculate_hits = () => {
      s.Damage_Bonuses = 0

      if (s.Is_Favored_Gun_Type === "yes") {
        s.Favored_Gun_Damage_Mod = s.Damage_Mod
        s.Damage_Bonuses += get_stat_total(`Damage_Mod_Favored`)
      } else {
        s.Favored_Gun_Damage_Mod = 0
      }

      s.Damage_Bonuses += get_stat_total(`Gun_Damage_Mod__gun${s.Gun_Number}`)


      let natural_hit_rolls = []
      for (let i = 0; i < s.Hits; i++) {
        natural_hit_rolls.push(...Array.from(
          document.getElementsByClassName(`DamageDie__gun${s.Gun_Number}`)
        ).map((element) => {
          return roll(parseInt(element.innerHTML, 10))
        }))
      }
      s.Natural_Hit_Rolls = natural_hit_rolls

      let natural_crit_rolls = []
      for (let i = 0; i < s.Crits; i++) {
        natural_crit_rolls.push(roll(12))
      }
      s.Natural_Crit_Rolls = natural_crit_rolls

      updateState()
    }

    const init = () => {
      Array.from(
        document.getElementsByClassName('accuracy_roller')
      ).forEach((element) => {
        element.addEventListener('click', roll_accuracy)
      })
      updateValues()
      updateState()
    }

    document.addEventListener("DOMContentLoaded", init);
  </script>
</head>

<body>
  <main>
    <h1>Rodger Roller</h1>
    <p>This is my custom character sheet and dice roller for my Bunkers And Badasses character. </p>

    <p>Question: If there is a DMG or CRIT DMG mod on a gun and there are multiple hits
      or crits, does the mod get added for each one, or is it only added one time?</p>

    <div class="flex cards">
      <table>
        <tr>
          <td>Level:</td>
          <td>{{level}}</td>
        </tr>
        <tr>
          <td>BA Rank:</td>
          <td>{{badass_rank}}</td>
        </tr>
      </table>

      <table>
        <tr>
          <td>Health:</td>
          <td>{{health.current}}/{{health.max}}</td>
        </tr>
        <tr>
          <td>Regen:</td>
          <td>{{health.regen}}</td>
        </tr>
      </table>

      <table>
        <tr>
          <td>Shields:</td>
          <td>{{shields.current}}/{{shields.max}}</td>
        </tr>
        <tr>
          <td>Regen:</td>
          <td>{{shields.regen}}</td>
        </tr>
      </table>

      <table>
        <tr>
          <td>Gold:</td>
          <td>{{gold}}</td>
        </tr>
        <tr>
          <td>BA Tokens:</td>
          <td>{{badass_tokens}}</td>
        </tr>
      </table>

    </div>

    <table>
      <tr>
        <td>Shield Type:</td>
        <td>{{shields.type}}</td>
      </tr>
      <tr>
        <td>Shield Info:</td>
        <td>{{shields.info}}</td>
      </tr>
    </table>

    <h2>Range Attack</h2>
    <div class="flex">
      <table>
        <tr>
          <td>Natural:</td>
          <td id="Roll_Natural">-</td>
        </tr>
        <tr>
          <td>Modifier:</td>
          <td id="Accuracy_Adjustment">-</td>
        </tr>
        <tr>
          <td>Total: </td>
          <td id="Roll_Total">-</td>
        </tr>
      </table>
      <table>
        <tr>
          <td>Hits: </td>
          <td id="Hits">-</td>
        </tr>
        <tr>
          <td>Crits: </td>
          <td id="Crits">-</td>
        </tr>
      </table>
      <table>
        <tr>
          <td>Natural Hit Rolls: </td>
          <td id="Natural_Hit_Rolls">-</td>
        </tr>
        <tr>
          <td>Natural Crit Rolls: </td>
          <td id="Natural_Crit_Rolls">-</td>
        </tr>
        <tr>
          <td>Fav Gun DMG Mod:</td>
          <td id="Favored_Gun_Damage_Mod">-</td>
        </tr>
        <tr>
          <td>Bonuses:</td>
          <td id="Damage_Bonuses">-</td>
        </tr>
      </table>
      <table>
        <tr>
          <td>Total Damage: </td>
          <td id="Total_Damage">-</td>
        </tr>
      </table>

    </div>

    <hr />

    <h2>Guns!</h2>
    <div class="gun_wrapper">
      {% for gun in guns %}
      <table class="gun_details">
        {% set gunIndex = loop.index0 %}
        <tr>
          <td colspan="2">{{ gun.guild}} Guild</td>
        </tr>
        <tr>
          <td colspan="2">{{ gun.name }}</td>
        </tr>
        <tr>
          <td>Type:</td>
          <td id="Gun_Type_gun{{gunIndex}}">{{gun.type}}</td>
        </tr>
        <tr>
          <td>Favored:</td>
          <td id="Is_Favored_Gun_Type__gun{{gunIndex}}">{% if favored_gun_type.type == gun.type %}yes{% else %}no{%
            endif
            %}</td>
        </tr>
        <tr>
          <td>Range: </td>
          <td>{{ gun.range }}</td>
        </tr>
        {% for die in gun.damage %}
        <tr>
          <td>Damage Die:</td>
          <td class="DamageDie__gun{{gunIndex}}">{{die}}</td>
        </tr>
        {% endfor %}
        {% for stat in gun.stats %}
        <tr>
          <td>{{ stat.stat }}:</td>
          <td class="{{ stat.stat }}__gun{{ gunIndex }}">{{ stat.value }}</td>
        </tr>
        {% endfor %}

        {% for toggle in gun.toggles %}
        <tr>
          <td>{{ toggle.name }}</td>
          <td><input type="checkbox" class="{{toggle.stat}}__gun{{gunIndex}}_toggle" data-value="{{toggle.value}}"
              checked>
          </td>
        </tr>
        {% endfor %}

        {% for hit in gun.hits %}
        <tr>
          <td class="hits_count_gun{{gunIndex}}" data-min="{{hit.min_roll}}" data-value="{{hit.add}}">Add
            {{ hit.add }} hit at:
          </td>
          <td>
            {{hit.min_roll}}
          </td>
        </tr>
        {% endfor %}

        {% for crit in gun.crits %}
        <tr>
          <td class="crits_count_gun{{gunIndex}}" data-min="{{crit.min_roll}}" data-value="{{crit.add}}">
            Add {{ crit.add }} crit at:
          </td>
          <td>
            {{crit.min_roll}}
          </td>
        </tr>
        {% endfor %}
        <tr>
          <td colspan="2"><button class="accuracy_roller" data-gun="{{gunIndex}}">Roll</button></td>
        </tr>
      </table>

      {% endfor %}
    </div>

    <h2>Core</h2>
    <div class="flex cards">
      <table>
        <tr>
          <td>Accuracy: </td>
          <td id="Accuracy_Base"></td>
        </tr>
        <tr>
          <td>Mod:</td>
          <td id="Accuracy_Mod"></td>
        </tr>
      </table>
      <table>
        <tr>
          <td>Damage: </td>
          <td id="Damage_Base"></td>
        </tr>
        <tr>
          <td>Mod:</td>
          <td id="Damage_Mod"></td>
        </tr>
      </table>
      <table>
        <tr>
          <td>Mastery: </td>
          <td id="Mastery_Base"></td>
        </tr>
        <tr>
          <td>Mod:</td>
          <td id="Mastery_Mod"></td>
        </tr>
      </table>
      <table>
        <tr>
          <td>Speed:</td>
          <td id="Speed_Base"></td>
        </tr>
        <tr>
          <td>Mod:</td>
          <td id="Speed_Mod"></td>
        </tr>
      </table>
    </div>

    <h2>Archetype: Deadeye</h2>
    <div class="flex cards">
      {% for stat in archetype_stats %}
      <table>
        <tr>
          <td>{{stat.stat}}: </td>
          <td class="{{stat.stat}}">{{stat.value}}</td>
        </tr>
      </table>
      {% endfor %}
    </div>

    <h2>Class: Hunter</h2>
    <div class="flex cards">
      {% for stat in class_stats %}
      <table>
        <tr>
          <td>{{stat.stat}}:</td>
          <td class="{{stat.stat}}">{{stat.value}}</td>
        </tr>
      </table>
      {% endfor %}
    </div>

    <h2>Background: Prize Shot</h2>
    <div class="flex cards">
      {% for stat in background_stats %}
      <table>
        <tr>
          <td>{{stat.stat}}:</td>
          <td class="{{stat.stat}}">{{stat.value}}</td>
        </tr>
      </table>
      {% endfor %}
    </div>

    <h2>Action Skill</h2>
    <div>{{action_skill.name}}</div>
    <div>TODO: Add tickmarks for single use in combat and number per day equaly to mastery mod</div>

    <h2>Favored Gun</h2>
    <div id="Favored_Gun_Type">{{ favored_gun_type.type }}</div>

    <h2>Skill Tree</h2>
    <div class="cards">
      {% for skill in skill_tree %}
      <table>
        <tr>
          <td colspan="2">
            {{ skill.name }}
          </td>
        </tr>
        {% for stat in skill.stats %}
        <tr>
          <td>{{ stat.stat }}</td>
          <td class="{{stat.stat }}">{{ stat.value }}</td>
        </tr>
        {% endfor %}
      </table>
      {% endfor %}
    </div>

    <h2>Melee Die</h2>
    <div>1D4</div>

    <h2>Traits</h2>
    <div>Insider: +5 Guild Sneak Checks</div>
    <div>Looter: +5 Loot Search Checks</div>
  </main>

</body>

</html>
