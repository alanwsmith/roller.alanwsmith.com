-> title

roller.alanwsmith.com

-> subtitle

A virtual character sheet and dice roller for
my Bunkers and Badasses character: Rodger Hammerstien 

-> h2

Overview

I'm playing my first tabletop game^bnb^^. I'm
having a blast. Keeping up with all the stat
details is not my strong suit. Also, I don't have
dice. Naturally, that led to building my own site
to give me the numbers and handle the math. 

> roller.alanwsmith.com
> https://roller.alanwsmith.com >

-> h2

Details

The site is really just a single static page that 
includes the stats and virtual rollers. The data 
is maintained in a JSON file^json^^. I'm doing an 
experiment with the build process using a 
Minijinja^mj^^ template^tmpl^^ and a simple Rust 
process^rp^^ to output the page. 

The data is output directly into HTML elements 
(and `data-` attributes in some cases). There's a 
fair number of dynamic calculations that happen on 
the page. I could have called the JSON in JavaScript
or made a JS object. I found the simplicity of 
writing out to the template directly nice though. 

Calculations are done by pulling in the data via
`getElementById()`js` and `getElementsByClassName()`js`
calls. I considered making a duplicate of the data 
in a JS object. That felt like the wrong move. I 
prefer the single source of truth model. 

-> h2

Rolls

The virtual dice rolls are done with the 
`Crypto.getRandomValues()`js`^grv^^ JavaScript 
method. Some are simple, like the `1d6`` that 
simulate a single six sided dice roll. Others are
more complicated like the *Range Attack** rolls.
Those involved pulling various values and 
conditions. 

All of that logic is done in JavaScript. 

-> h2

The Math

I didn't realize how involved the math was
until I coded everything. And, not just the 
math, but all the conditions you have to keep
up with and cross reference. I'm good with all 
that stuff if I can focus on it, but the context
switching to the narration of the game made it
take a lot of effort. 

It took some time to get everything wired up
but now I just hit a button and get the numbers. 
It's a different experience than rolling a die, 
but I'm cool with it. The way my brain works, 
it lets me better focus on the story. 


---

-> Reference
>> Bunkers And Badasses
>> id: bnb
>> url: https://tinytinagames.com/

Based off the Borderlands series of games (of
which I've now played a little and liked as well)


-> Reference
>> Crypto: getRandomValues() - MDN
>> id: grv
>> url: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues

The way to get random values that are cryptographically 
strong in your browser via JavaScript. They're suitable
for cryptographic purposes so they should be fine for
simulating dice rolls unless I'm really missing something.


-> Reference
>> JSON Data File
>> id: json
>> url: https://github.com/alanwsmith/roller.alanwsmith.com/blob/main/src/data.json

This is the source data for the site. 


-> Reference
>> Minijinja 
>> id: mj
>> url: 

"A powerful template engine for Rust with minimal dependencies."
I used the original Jinja a long time ago. It's fun to see
that it's migrated to different languages. 


-> Reference
>> Rust Build Process
>> id: rp
>> url: https://github.com/alanwsmith/roller.alanwsmith.com/blob/main/src/main.rs

This is about as short as I could make it. It reads the
template file and the JSON data then mashes them together
and writes the output.


-> Reference
>> Template Character Sheet
>> id: tmpl
>> url: https://github.com/alanwsmith/roller.alanwsmith.com/blob/main/src/template.j2 

The Minijinja template file used to build the 
character sheet. I was thinking about looking
up the alternate ways to do the displays besides
tables. Leaving that for another time though. 
This works and got me out the door.


